import Head from "next/head";
import { useRouter } from "next/navigation";

import toast from "react-hot-toast";

import { useRecipe } from "~/hooks/data/recipe";
import RecipeForm from "~/components/recipe/recipe-form";
import WithNavBar from "~/components/UI/with-nabvar";
import { type RecipeFormModel } from "~/models/recipe";
import { useSession } from "next-auth/react";

export default function CreateRecipe() {
  const router = useRouter();
  const { data: sessionData } = useSession();
  const { create, isLoading, categories, allIngredients } = useRecipe();

  const createHandler = async (recipeToCreate?: RecipeFormModel) => {
    if (!recipeToCreate?.name || !sessionData?.user.id) return;

    const createRecipe = create(
      recipeToCreate,
      sessionData.user.id,
      (newRecipe) =>
        newRecipe.recipe.id && router.push(`/recipe/${newRecipe.recipe.id}`),
    );

    await toast.promise(createRecipe, {
      error: "Failed to create",
      loading: "Creating recipe",
      success: "Recipe created",
    });
  };

  return (
    <>
      <Head>
        <title>Create Recipe</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <WithNavBar>
        <main className="container flex flex-col items-center justify-center gap-12 py-8 md:py-16">
          <RecipeForm
            allIngredients={allIngredients}
            categories={categories}
            onSubmit={createHandler}
            isLoading={isLoading}
          />
        </main>
      </WithNavBar>
    </>
  );
}
